---
- hosts: all
  become: yes
  become_user: root
  gather_facts: true
 
  vars: 
    ansible_tower_version: ansible-tower-setup-bundle-3.2.1-1.el7 
    repository:  https://github.com/mikecali/demo_app.git

  tasks:
    - name: add epel repository
      yum:
         name: epel-release
         state: present
 

    - name: configure timezone
      timezone:
        name: Pacific/Auckland

    - name: install ansible
      yum:
        name: ansible
        state: latest
      when: "'ansible-host' in inventory_hostname"

    - name: Install http
      yum: name={{ item }} state=present
      with_items:
         - httpd
         - php
         - php-mysqlnd
         - git
      become: true
      when: "'web' in inventory_hostname"

    - name: http service state
      service: name=httpd state=started enabled=yes
      become: true
      when: "'web' in inventory_hostname"
    
    - name: enabled mod_rewrite
      apache2_module: name=rewrite state=present
      notify:
        - restart apache2
      when: "'web' in inventory_hostname"

    - name: Copy the code from repository
      git: repo={{ repository }} dest=/var/www/html/
      become: true
      when: "'web' in inventory_hostname"

    - name: Start firewalld
      service:
        state: restarted
        name: firewalld
      when: "'web' in inventory_hostname or 'ansible-host' in inventory_hostname"
      become_user: root

    - name: Allow apache 
      firewalld:
        service: http
        permanent: true
        state: enabled
        zone: public
      when: "'web' in inventory_hostname"
      become_user: root

    - name: Install and start Cockpit
      yum:
        name: cockpit
        state: latest
      become_user: root
    
    - name: enable cockpit
      systemd:
        name: cockpit
        state: started
        enabled: yes
      become: true
    
    - name: Allow Cockpit to access the vm
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        insertafter: '#PasswordAuthentication'
        line: 'PasswordAuthentication yes'
#      shell: sed -i 'PasswordAuthentication yes' /etc/ssh/sshd_conf
#      shell: sed -i 'PasswordAuthentication yes' /etc/ssh/sshd.conf
      become: yes

    - name: Allow root login for cockpit
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        insertafter: '#PermitRootLogin'
        line: 'PermitRootLogin yes'
#      shell: sed -i 'PermitRootLogin yes' /etc/ssh/sshd.conf
      become: yes

    - name: Restart sshd
      service: 
        state: restarted
        name: sshd

    - name: Allow cockpit on firewalld
      firewalld:
         service: cockpit
         permanent: true
         state: enabled
         zone: public
      become_user: root

    - name: Restart firewalld
      service:
        state: restarted
        name: firewalld
      when: "'web' in inventory_hostname or 'ansible-host' in inventory_hostname"
      become_user: root

    - name: generate vagrant key
      community.crypto.openssh_keypair:
        path: /home/vagrant/.ssh/id_ssh_rsa
        force: True
      register: key_pair
      when: "'ansible-host' in inventory_hostname"

    - name: look inside the dir
      find:
        path: /home/vagrant/.ssh
        file_type: directory
      register: dir

    - name: set_fact
      set_fact:
        sshdir: "{{ dir.files | map(attribute='path') | list }}"

    - name: change file mode
      file:
        path: "{{ item }}"
        owner: vagrant
        group: vagrant
        mode: 0644
      with_items:
        - "{{ sshdir }}"

    - name: pull key from tower to local machine
      fetch:
        src: /home/vagrant/.ssh/id_ssh_rsa.pub
        dest: /tmp/id_ssh_rsa.pub
        flat: yes
      when: "'ansible-host' in inventory_hostname"

    - name: copy key from local machine to 
      copy:
        src: /tmp/id_ssh_rsa.pub
        dest: /home/vagrant/.ssh/
        mode: 0644
        owner: vagrant  
      when: "'web' in inventory_hostname" 

  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
      when: "'web' in inventory_hostname"
