---
- hosts: all
  become: yes
  become_user: root
  gather_facts: true
 
  vars: 
    ansible_tower_version: ansible-tower-setup-bundle-3.2.1-1.el7 

  tasks:
    - name: verify if tower is installed
      command: /usr/bin/ansible-tower-service status
      register: tower
      ignore_errors: yes

    - name: install wget on ansible-host only
      yum:
        name: wget
        state: latest
      when: "'ansible' in inventory_hostname"

    - name: verify if installer is already downloaded
      stat: 
         path: /home/vagrant/ansible-tower-setup-bundle-latest.el7.tar.gz
      when: "'ansible-host' in inventory_hostname"    
      register: t

    - name: Get the Tower Installer
#      get_url:
#          url: https://releases.ansible.com/ansible-tower/setup-bundle/ansible-tower-setup-bundle-latest.el7.tar.gz
#          dest: /home/vagrant/
#          mode: 0755
      shell: wget https://releases.ansible.com/ansible-tower/setup-bundle/ansible-tower-setup-bundle-latest.el7.tar.gz
      when: "'ansible' in inventory_hostname and t.stat.exists == False"
      ignore_errors: yes
      become_user: vagrant

    - name: verify if installer is untar
      stat: 
         path: /home/vagrant/ansible-tower-setup-bundle*
      register: p
      when: "'ansible' in inventory_hostname"

    - name: untar tower Installer
      # unarchive:
      #  src: /home/vagrant/ansible-tower-setup-bundle-latest.el7.tar.gz
      #  dest: /home/vagrant/installer
      shell: tar -xvf /home/vagrant/ansible-tower-setup-bundle-latest.el7.tar.gz
      when: p.stat.exists == False
      ignore_errors: yes
    
    - name: Copy vagrant key
      copy:
        src: keys/vagrant
        dest: /home/vagrant/.ssh/
        owner: vagrant
        group: vagrant
        mode: 0600
      when: "'ansible-host' in inventory_hostname"

    - name: Find the correct installer directory 
      find:
        paths: /home/vagrant/
        recurse: yes
        file_type: directory
        patterns: ['ansible-tower-setup-bundle*']
      register: directory_result

    - name: debug
      debug: var=directory_result.files


    - name: Copy inventory file
      copy:
        src: tower/inventory
        dest: "{{ item.path }}"
        owner: vagrant
        group: vagrant
        mode: 0600
      when: "'ansible-host' in inventory_hostname"
      with_items: "{{ directory_result.files }}"


    - name: Create tower group
      group:
        name: awx
        state: present
      when: "'ansible-host' in inventory_hostname"

    - name: Create tower User 
      user:
        name: awx
        group: awx
      when: "'ansible-host' in inventory_hostname"

    - name: add directory needed by tower
      file:
         path: /var/log/tower
         state: directory
         owner: awx
         group: awx
         mode: 0755
      when: "'ansible-host' in inventory_hostname" 

    - name: disable host key checking on all nodes
      shell: sed -i '/host_key_checking/a host_key_checking = False' /etc/ansible/ansible.cfg
      become_user: root
      when: "'ansible-host' in inventory_hostname"
      ignore_errors: yes

    - name: verify if Tower is already installed
      command: ansible-tower-service status
      register: tower_status
      when: "'ansible-host' in inventory_hostname"
      ignore_errors:  yes

    - name: Try to start the installed Tower
      command: ansible-tower-service start
      become_user: root
      register: tower_restart
      when: 
        - ansible-host' in inventory_hostname
        - tower_status is failed
      ignore_errors: yes


    - name: Verify installer file
      find: 
        paths: /home/vagrant/
        recurse: yes
        patterns: ['setup.sh']
      register: installer_result

    - name: debug
      debug: var=installer_result.files

    - name: Install Tower
      command: "{{item.path }}" 
      when: 
        - "'ansible-host' in inventory_hostname"
        - tower is failed
      become: yes
      ignore_errors: yes
      with_items: "{{ installer_result.files }}"
      register: result

    - name: report status of install
      command: ansible-tower-service status
      when: result is succeeded

